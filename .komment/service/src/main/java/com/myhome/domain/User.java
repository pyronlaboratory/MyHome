{"name":"User.java","path":"service/src/main/java/com/myhome/domain/User.java","content":{"structured":{"description":"An entity called `User` that represents a valid user in a service. The `User` class has fields for name, user ID, email, and encrypted password, as well as methods for retrieving or setting these values. It also defines relationships with other entities using `@ManyToMany` and `@OneToMany` annotations. Additionally, it utilizes Lombok to simplify the creation of getters and setters.","items":[{"id":"2a182cef-0a7f-5893-e641-c7e61d13f53e","ancestors":[],"description":"represents a valid user in a service and has fields for user ID, email, name, encrypted password, and various relationships with other entities through many-to-many and one-to-many associations.\nFields:\n\t- name (String): represents a user's personal name. \n\t- userId (String): in the User class represents a unique identifier for each user account in the system. \n\t- email (String): stores a string value representing the user's email address. \n\t- emailConfirmed (boolean): indicates whether an email address associated with the User entity has been confirmed by the user. \n\t- encryptedPassword (String): in the User class represents a password that is encrypted for security purposes. \n\t- communities (Set<Community>): in the User class represents a set of Community objects associated with each user. \n\t- userTokens (Set<SecurityToken>): in the User class represents a set of SecurityTokens associated with a single user account. \n\n","name":"User","code":"@AllArgsConstructor\n@Getter\n@NoArgsConstructor\n@Data\n@EqualsAndHashCode(callSuper = false, of = {\"userId\", \"email\"})\n@Entity\n@With\n@NamedEntityGraphs({\n    @NamedEntityGraph(\n        name = \"User.communities\",\n        attributeNodes = {\n            @NamedAttributeNode(\"communities\"),\n        }\n    ),\n    @NamedEntityGraph(\n        name = \"User.userTokens\",\n        attributeNodes = {\n            @NamedAttributeNode(\"userTokens\"),\n        }\n    )\n})\npublic class User extends BaseEntity {\n  @Column(nullable = false)\n  private String name;\n  @Column(unique = true, nullable = false)\n  private String userId;\n  @Column(unique = true, nullable = false)\n  private String email;\n  @Column(nullable = false)\n  private boolean emailConfirmed = false;\n  @Column(nullable = false)\n  private String encryptedPassword;\n  @ManyToMany(mappedBy = \"admins\", fetch = FetchType.LAZY)\n  private Set<Community> communities = new HashSet<>();\n  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = \"tokenOwner\")\n  private Set<SecurityToken> userTokens = new HashSet<>();\n}","location":{"start":43,"insert":43,"offset":" ","indent":0},"item_type":"class","length":37}]}}}