{"name":"HouseController.java","path":"house-service/src/main/java/com/prathab/homeservice/controllers/HouseController.java","content":{"structured":{"description":"A `HouseController` class that implements a RESTful web service for handling house-related requests. The controller contains methods for listing all houses and providing detailed information about individual houses. The `listAllHouses()` method receives a `ListAllHouseRequestBody` object from the client, validates it, and then uses the `houseService` to retrieve all houses. The retrieved houses are then converted into a response set using the `houseApiMapper`, and the function returns a `ResponseEntity` with the list of houses in the response body.","diagram":"digraph G {\n    label=\"com.prathab.homeservice.controllers.HouseController\"\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"];\n    \n    subgraph cluster_0 {\n        label=\"models\"\n        color=\"#33363A\"\n        subgraph cluster_1 {\n            label=\"response\"\n            color=\"#33363A\"\n            ListAllHouseResponse\n        }\n        subgraph cluster_2 {\n            label=\"request\"\n            color=\"#33363A\"\n            ListAllHouseRequestBody\n        }\n    }\n    subgraph cluster_main {\n        // style=filled;\n        color=\"#00000000\"; \n        HouseController [style=filled,color=\"#26de81\",shape=rectangle, fontname=\"Courier New\"];\n        label = \"\"\n    }\n    HouseController -> ListAllHouseResponse \n    ListAllHouseRequestBody -> HouseController \n}\n","items":[{"id":"36b08600-d8e3-fe9b-794b-f17160a2971f","ancestors":[],"type":"function","description":"in the provided file is a RESTful API controller that handles requests related to houses. The class has several methods, including `listAllHouses`, which retrieves all houses from the database and returns them in a response body. The `listAllHouses` method takes in a `ListAllHouseRequestBody` object as input, validates it, and then uses the `houseService` to retrieve all houses. The retrieved houses are then converted into a response set using the `houseApiMapper`, and the function returns a `ResponseEntity` with the list of houses in the response body.","name":"HouseController","code":"@RestController\n@Slf4j\npublic class HouseController {\n  private final HouseService houseService;\n  private final HouseApiMapper houseApiMapper;\n\n  public HouseController(HouseService houseService,\n      HouseApiMapper houseApiMapper) {\n    this.houseService = houseService;\n    this.houseApiMapper = houseApiMapper;\n  }\n\n  /**\n   * returns the string \"Working\".\n   * \n   * @returns the string \"Working\".\n   */\n  @GetMapping(\"/houses/status\")\n  public String status() {\n    return \"Working\";\n  }\n\n  /**\n   * receives a `ListAllHouseRequestBody` object from the client, validates it, and\n   * then uses the `houseService` to retrieve all houses. The retrieved houses are then\n   * converted into a response set using the `houseApiMapper`. Finally, the function\n   * returns a `ResponseEntity` with the list of houses in the response body.\n   * \n   * @param request ListAllHouseRequestBody object passed in from the client, which\n   * contains the necessary data to retrieve all houses from the database.\n   * \n   * \t- `@RequestBody`: The request body is expected to be in the JSON or XML format.\n   * \t- `@Valid`: The input must be validated using a bean validation configuration.\n   * \t- `ListAllHouseRequestBody`: This class represents the request body, which contains\n   * properties for the list of houses.\n   * \t- `houseService`: A service interface that provides methods for retrieving houses.\n   * \t- `houseApiMapper`: An API mapper interface that maps the list of houses to a\n   * response format.\n   * \n   * The function returns a response entity with the list of houses in the response\n   * body, along with any additional information or metadata as needed.\n   * \n   * @returns a `ListAllHouseResponse` object containing a list of house details.\n   * \n   * \t- `ResponseEntity`: This is the type of the returned object, which represents an\n   * HTTP response entity with a status code and a body.\n   * \t- `HttpStatus.OK`: This is the status code associated with the response, indicating\n   * that the request was successful.\n   * \t- `body`: This is the contents of the response body, which is a `ListAllHouseResponse`\n   * object.\n   * \t- `ListAllHouseResponse`: This is the type of the response body, which represents\n   * the list of houses returned in response to the request. It has several attributes:\n   * \t+ `setHouseDetails()`: This is a set of house details, which is a collection of\n   * `HouseDetailResponse` objects.\n   * \t+ `getHouseDetails()`: This is an accessor method that returns the set of house\n   * details.\n   * \n   * The `listAllHouses` function takes in a `ListAllHouseRequestBody` object as input\n   * and returns a `ListAllHouseResponse` object as output. The input object contains\n   * the request parameters, such as the media type and the path for the API call. The\n   * output object contains the list of houses returned in response to the request.\n   */\n  @GetMapping(\n      path = \"/houses\",\n      consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},\n      produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE}\n  )\n  public ResponseEntity<ListAllHouseResponse> listAllHouses(@RequestBody @Valid\n      ListAllHouseRequestBody request) {\n    var houseSet = houseService.findAllHouses();\n    var houseDetailResponseSet = houseApiMapper.houseSetToHouseDetailResponseSet(houseSet);\n    var listAllHouseResponse = new ListAllHouseResponse();\n    listAllHouseResponse.setHouseDetails(houseDetailResponseSet);\n    return ResponseEntity.status(HttpStatus.OK).body(listAllHouseResponse);\n  }\n}","location":{"start":39,"insert":32,"offset":" ","indent":0,"comment":{"start":31,"end":38}},"item_type":"class","length":76,"docLength":7},{"id":"5a7a52bf-9483-0fad-8048-d25fc4f9deaf","ancestors":["36b08600-d8e3-fe9b-794b-f17160a2971f"],"type":"function","description":"returns a string indicating that it is working.","params":[],"returns":{"type_name":"String","description":"\"Working\".","complex_type":false},"usage":{"language":"java","code":"@GetMapping(\"/houses/status\")\n  public String status() {\n    return \"Working\";\n  }\n}\n","description":"\nThis method uses the @GetMapping annotation to specify that it handles GET requests at /houses/status and returns a string. When called, this method simply returns the string \"Working\". This response indicates that the HouseController is active and functioning correctly."},"name":"status","code":"@GetMapping(\"/houses/status\")\n  public String status() {\n    return \"Working\";\n  }","location":{"start":56,"insert":51,"offset":" ","indent":2,"comment":{"start":50,"end":55}},"item_type":"method","length":4,"docLength":5},{"id":"646a72f1-29e2-778f-a243-cd60e7210514","ancestors":["36b08600-d8e3-fe9b-794b-f17160a2971f"],"type":"function","description":"receives a list of houses from the service and maps it to a response set containing house details using an API mapper. It then returns a ResponseEntity with OK status and the mapped response set as body.","params":[{"name":"request","type_name":"ListAllHouseRequestBody","description":"ListAllHouseRequestBody object that contains the required parameters for retrieving a list of houses, including the page number, page size, and sort criteria.\n\n* `@RequestBody`: Indicates that the request body is required and should be serialized and sent as the request entity.\n* `@Valid`: An annotation indicating that the request body must validate against a provided Java class (i.e., `ListAllHouseRequestBody`).\n* `request`: The request body, which contains properties such as `houseId`, `houseName`, `address`, etc.","complex_type":true}],"returns":{"type_name":"ListAllHouseResponse","description":"a `ListAllHouseResponse` object containing the details of all houses found.\n\n* `ResponseEntity`: This is the base class for all response entities in Spring WebFlux. It contains the HTTP status code and the body of the response.\n* `body`: This is a reference to the actual response object that will be sent back to the client. In this case, it's a `ListAllHouseResponse` object.\n* `HttpStatus.OK`: This is the HTTP status code associated with the response. It indicates that the request was successful and the server has successfully processed the request.\n* `listAllHouseResponse`: This is the main response object returned by the function. It contains a list of `HouseDetailResponse` objects, which are explained below:\n\nIn summary, the `listAllHouses` function returns a response object with an HTTP status code of 200 (OK) and a body containing a list of `HouseDetailResponse` objects, which represent the details of each house in the system.","complex_type":true},"usage":{"language":"java","code":"@Test\npublic void testListAllHouses() {\n    var request = new ListAllHouseRequestBody();\n    var response = houseController.listAllHouses(request);\n}\n","description":"\nThis test is using the `listAllHouses` method from the previous example, but with a mocked implementation of the `houseService` and `houseApiMapper`. It is then checking that the output of the function is not null and has the correct status code."},"name":"listAllHouses","code":"@GetMapping(\n      path = \"/houses\",\n      consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},\n      produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE}\n  )\n  public ResponseEntity<ListAllHouseResponse> listAllHouses(@RequestBody @Valid\n      ListAllHouseRequestBody request) {\n    var houseSet = houseService.findAllHouses();\n    var houseDetailResponseSet = houseApiMapper.houseSetToHouseDetailResponseSet(houseSet);\n    var listAllHouseResponse = new ListAllHouseResponse();\n    listAllHouseResponse.setHouseDetails(houseDetailResponseSet);\n    return ResponseEntity.status(HttpStatus.OK).body(listAllHouseResponse);\n  }","location":{"start":101,"insert":61,"offset":" ","indent":2,"comment":{"start":60,"end":100}},"item_type":"method","length":13,"docLength":40}]}}}