{"name":"CommunityAdminSDJpaService.java","path":"community-service/src/main/java/com/prathab/communityservice/services/springdatajpa/CommunityAdminSDJpaService.java","content":{"structured":{"description":"A service class called `CommunityAdminSDJpaService` that implements the `CommunityAdminService` interface. The service uses Spring Data JPA to interact with a database and provides methods for adding community admins. Specifically, the `addCommunityAdmin()` method takes a `communityId` and a `communityAdminDto` as input, converts the `communityAdminDto` into a `CommunityAdmin` object using the provided `CommunityAdminMapper`, saves the created `CommunityAdmin` to the database using the `communityAdminRepository`, and returns the saved `CommunityAdmin`.","image":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.prathab.communityservice.domain.Community Pages: 1 -->\n<svg width=\"223pt\" height=\"159pt\"\n viewBox=\"0.00 0.00 223.00 159.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 155)\">\n<title>com.prathab.communityservice.domain.Community</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"215,-30 0,-30 0,0 215,0 215,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.prathab.communityservice.domain.</text>\n<text text-anchor=\"middle\" x=\"107.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Community</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1prathab_1_1communityservice_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"215,-96 0,-96 0,-66 215,-66 215,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.prathab.communityservice.domain.</text>\n<text text-anchor=\"middle\" x=\"107.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M107.5,-55.54C107.5,-46.96 107.5,-37.61 107.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"104,-55.8 107.5,-65.8 111,-55.8 104,-55.8\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"144.5,-151 70.5,-151 70.5,-132 144.5,-132 144.5,-151\"/>\n<text text-anchor=\"middle\" x=\"107.5\" y=\"-139\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M107.5,-121.65C107.5,-113.36 107.5,-103.78 107.5,-96.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"104,-121.87 107.5,-131.87 111,-121.87 104,-121.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n","items":[{"id":"bdbf26e2-ee12-ce9a-6e42-19737662b36f","ancestors":[],"type":"function","description":"is an implementation of the CommunityAdminService interface that provides methods for managing community admins using Spring Data JPA. It accepts community ID and CommunityAdminDto objects, converts them into a corresponding CommunityAdmin object, and saves it to the repository for further processing.","name":"CommunityAdminSDJpaService","code":"public class CommunityAdminSDJpaService implements CommunityAdminService {\n  private final CommunityAdminRepository communityAdminRepository;\n  private final CommunityAdminMapper communityAdminMapper;\n\n  public CommunityAdminSDJpaService(\n      CommunityAdminRepository communityAdminRepository,\n      CommunityAdminMapper communityAdminMapper) {\n    this.communityAdminRepository = communityAdminRepository;\n    this.communityAdminMapper = communityAdminMapper;\n  }\n\n  @Override\n  public Community addCommunityAdmin(String communityId, CommunityAdminDto communityAdminDto) {\n    var communityAdmin = communityAdminMapper.communityAdminDtoToCommunityAdmin(communityAdminDto);\n    var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n    // TODO complete this\n    return null;\n  }\n}","location":{"start":25,"insert":25,"offset":" ","indent":0,"comment":null},"item_type":"class","length":19},{"id":"9de68e95-8bb5-f6b5-ea47-2a81703c804e","ancestors":["bdbf26e2-ee12-ce9a-6e42-19737662b36f"],"type":"function","description":"adds a new CommunityAdmin to the database by mapping the provided CommunityAdminDto to a CommunityAdmin object and saving it in the repository.","params":[{"name":"communityId","type_name":"String","description":"identifier of the community to which the new community admin will be added.","complex_type":false},{"name":"communityAdminDto","type_name":"CommunityAdminDto","description":"CommunityAdmin object to be saved in the database, which contains the details of a community administrator.\n\n* `communityId`: The ID of the community to which the admin will be added.\n* `communityAdminDto`: A DTO object representing a community administrator, containing various attributes such as `username`, `email`, `firstName`, `lastName`, and `role`.","complex_type":true}],"returns":{"type_name":"null","description":"a saved CommunityAdmin object.\n\n* `savedCommunityAdmin`: This is the saved CommunityAdmin instance in the database, which contains information about the community administrator, such as their name and email address.\n* `null`: The value of this variable is `null`, indicating that no further processing or action is required after saving the CommunityAdmin instance to the database.","complex_type":true},"usage":{"language":"java","code":"@Test\npublic void addCommunityAdmin_validInput() {\n    // given\n    var communityId = \"123\";\n    var communityAdminDto = new CommunityAdminDto();\n    communityAdminDto.setName(\"John Doe\");\n    communityAdminDto.setEmail(\"johndoe@example.com\");\n\n    // when\n    var savedCommunityAdmin = communityAdminService.addCommunityAdmin(communityId, communityAdminDto);\n\n    // then\n    assertNotNull(savedCommunityAdmin);\n    assertEquals(\"John Doe\", savedCommunityAdmin.getName());\n}\n","description":""},"name":"addCommunityAdmin","code":"@Override\n  public Community addCommunityAdmin(String communityId, CommunityAdminDto communityAdminDto) {\n    var communityAdmin = communityAdminMapper.communityAdminDtoToCommunityAdmin(communityAdminDto);\n    var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n    // TODO complete this\n    return null;\n  }","location":{"start":36,"insert":36,"offset":" ","indent":2,"comment":null},"item_type":"method","length":7}]}}}