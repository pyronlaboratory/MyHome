{"name":"DataLoader.java","path":"community-service/src/main/java/com/prathab/communityservice/bootstrap/DataLoader.java","content":{"structured":{"description":"A `DataLoader` class that acts as a `CommandLineRunner`. It loads data from the Community and CommunityAdmin repositories using Spring Boot's dependency injection. Specifically, it persists a default community and admin to the repos, updates the community with the saved admin, and saves both entities to the database.","image":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.prathab.communityservice.bootstrap.DataLoader Pages: 1 -->\n<svg width=\"232pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 232.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.prathab.communityservice.bootstrap.DataLoader</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"224,-30 0,-30 0,0 224,0 224,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.prathab.communityservice.bootstrap.</text>\n<text text-anchor=\"middle\" x=\"112\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">DataLoader</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"173,-85 51,-85 51,-66 173,-66 173,-85\"/>\n<text text-anchor=\"middle\" x=\"112\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">CommandLineRunner</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M112,-55.65C112,-47.36 112,-37.78 112,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"108.5,-55.87 112,-65.87 115.5,-55.87 108.5,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n","items":[{"id":"c8711fec-073f-9e99-7242-0f61a7405937","ancestors":[],"type":"function","description":"is a Spring Boot component that loads data into a Community and CommunityAdmin repository. It persists a community to the repository, creates a new admin, and associates the admin with the community through the repository. The class then updates the community with the saved admin.","name":"DataLoader","code":"@Component\npublic class DataLoader implements CommandLineRunner {\n  private final CommunityRepository communityRepository;\n  private final CommunityAdminRepository communityAdminRepository;\n\n  public DataLoader(\n      CommunityRepository communityRepository,\n      CommunityAdminRepository communityAdminRepository) {\n    this.communityRepository = communityRepository;\n    this.communityAdminRepository = communityAdminRepository;\n  }\n\n  @Override public void run(String... args) throws Exception {\n    loadData();\n  }\n\n  private void loadData() {\n    // Persist community to repo\n    var communityName = \"MyHome default community\";\n    var communityDistrict = \"MyHome default community district\";\n    var communityId = \"default-community-id-for-testing\";\n    var community = new Community();\n    community.setName(communityName);\n    community.setDistrict(communityDistrict);\n    community.setCommunityId(communityId);\n    var savedCommunity = communityRepository.save(community);\n\n    // Persist admin to repo\n    var communityAdmin = new CommunityAdmin();\n    var adminId = UUID.randomUUID().toString();\n    communityAdmin.setAdminId(adminId);\n    communityAdmin.getCommunities().add(savedCommunity);\n    var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n\n    // Update community with the saved admin\n    savedCommunity.getAdmins().add(savedCommunityAdmin);\n    communityRepository.save(savedCommunity);\n  }\n}","location":{"start":27,"insert":27,"offset":" ","indent":0,"comment":null},"item_type":"class","length":39},{"id":"fa3f7830-d049-a688-fe47-824807507135","ancestors":["c8711fec-073f-9e99-7242-0f61a7405937"],"type":"function","description":"loads data.","params":[],"usage":{"language":"java","code":"package com.prathab.communityservice.bootstrap;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class DataLoader implements CommandLineRunner {\n  private final CommunityRepository communityRepository;\n  private final CommunityAdminRepository communityAdminRepository;\n\n  public DataLoader(CommunityRepository communityRepository,\n      CommunityAdminRepository communityAdminRepository) {\n    this.communityRepository = communityRepository;\n    this.communityAdminRepository = communityAdminRepository;\n  }\n\n  @Override public void run(String... args) throws Exception {\n    loadData();\n  }\n\n  private void loadData() {\n    // Persist community to repo\n    var communityName = \"MyHome default community\";\n    var communityDistrict = \"MyHome default community district\";\n    var communityId = \"default-community-id-for-testing\";\n    var community = new Community();\n    community.setName(communityName);\n    community.setDistrict(communityDistrict);\n    community.setCommunityId(communityId);\n    var savedCommunity = communityRepository.save(community);\n\n    // Persist admin to repo\n    var communityAdmin = new CommunityAdmin();\n    var adminId = UUID.randomUUID().toString();\n    communityAdmin.setAdminId(adminId);\n    communityAdmin.getCommunities().add(savedCommunity);\n    var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n\n    // Update community with the saved admin\n    savedCommunity.getAdmins().add(savedCommunityAdmin);\n    communityRepository.save(savedCommunity);\n  }\n}\n","description":"\nTo use this method, you would need to create a `DataLoader` object and call its `run()` method. For example:\n"},"name":"run","code":"@Override public void run(String... args) throws Exception {\n    loadData();\n  }","location":{"start":39,"insert":39,"offset":" ","indent":2,"comment":null},"item_type":"method","length":3},{"id":"5449da6f-2c27-24ba-904e-736657ab0e6d","ancestors":["c8711fec-073f-9e99-7242-0f61a7405937"],"type":"function","description":"persists a community and an admin to a repository, updates the community with the saved admin, and saves the admin to the repository.","params":[],"usage":{"language":"java","code":"public class DataLoader implements CommandLineRunner {\n    private final CommunityRepository communityRepository;\n    private final CommunityAdminRepository communityAdminRepository;\n    \n    public DataLoader(CommunityRepository communityRepository, CommunityAdminRepository communityAdminRepository) {\n        this.communityRepository = communityRepository;\n        this.communityAdminRepository = communityAdminRepository;\n    }\n    \n    @Override\n    public void run(String... args) throws Exception {\n        loadData();\n    }\n    \n    private void loadData() {\n        // Persist community to repo\n        var communityName = \"MyHome default community\";\n        var communityDistrict = \"MyHome default community district\";\n        var communityId = \"default-community-id-for-testing\";\n        var community = new Community();\n        community.setName(communityName);\n        community.setDistrict(communityDistrict);\n        community.setCommunityId(communityId);\n        var savedCommunity = communityRepository.save(community);\n        \n        // Persist admin to repo\n        var communityAdmin = new CommunityAdmin();\n        var adminId = UUID.randomUUID().toString();\n        communityAdmin.setAdminId(adminId);\n        communityAdmin.getCommunities().add(savedCommunity);\n        var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n        \n        // Update community with the saved admin\n        savedCommunity.getAdmins().add(savedCommunityAdmin);\n        communityRepository.save(savedCommunity);\n    }\n}\n","description":"\nThe example code should be as short and concise as possible to illustrate how loadData would work correctly. The method does not create a unit test, explain its logic, or include incorrect input."},"name":"loadData","code":"private void loadData() {\n    // Persist community to repo\n    var communityName = \"MyHome default community\";\n    var communityDistrict = \"MyHome default community district\";\n    var communityId = \"default-community-id-for-testing\";\n    var community = new Community();\n    community.setName(communityName);\n    community.setDistrict(communityDistrict);\n    community.setCommunityId(communityId);\n    var savedCommunity = communityRepository.save(community);\n\n    // Persist admin to repo\n    var communityAdmin = new CommunityAdmin();\n    var adminId = UUID.randomUUID().toString();\n    communityAdmin.setAdminId(adminId);\n    communityAdmin.getCommunities().add(savedCommunity);\n    var savedCommunityAdmin = communityAdminRepository.save(communityAdmin);\n\n    // Update community with the saved admin\n    savedCommunity.getAdmins().add(savedCommunityAdmin);\n    communityRepository.save(savedCommunity);\n  }","location":{"start":43,"insert":43,"offset":" ","indent":2,"comment":null},"item_type":"method","length":22}]}}}