{"name":"CommunityMapperTest.java","path":"community-service/src/test/java/com/prathab/communityservice/dto/mapper/CommunityMapperTest.java","content":{"structured":{"description":"Two unit tests for testing the `CommunityMapper` class. The `communityToCommunityDto()` test verifies that the mapper correctly converts a `Community` object into a `CommunityDto` object, while the `communityDtoToCommunity()` test verifies that the mapper correctly converts a `CommunityDto` object into a `Community` object. The tests use Spring Boot testing framework and autowired `CommunityMapper` instance.","items":[{"id":"471ec84a-36b9-acb5-a14a-8db37568acd0","ancestors":[],"type":"function","description":"is a unit test class for the CommunityMapper class, which is responsible for mapping between the Community and CommunityDto objects. The test class includes two tests: communityToCommunityDto and communityDtoToCommunity. These tests verify that the mapper correctly maps between the two objects, including the id, name, district, and communityId fields.","name":"CommunityMapperTest","code":"@SpringBootTest\nclass CommunityMapperTest {\n  private final long id = 1L;\n  private final String communityId = \"12345678\";\n  private final String district = \"Test community district\";\n  private final String name = \"Test community name\";\n  private final long communityAdminId = 2L;\n\n  @Autowired\n  private CommunityMapper communityMapper;\n\n  @Test\n  void communityToCommunityDto() {\n    // given\n    var community = new Community();\n\n    community.setId(id);\n    community.setCommunityId(communityId);\n    community.setDistrict(district);\n    community.setName(name);\n\n    // when\n    var communityDto = communityMapper.communityToCommunityDto(community);\n\n    // then\n    assertEquals(communityDto.getId(), id);\n    assertEquals(communityDto.getName(), name);\n    assertEquals(communityDto.getDistrict(), district);\n    assertEquals(communityDto.getCommunityId(), communityId);\n  }\n\n  @Test\n  void communityDtoToCommunity() {\n    // given\n    var communityDto = new CommunityDto();\n    communityDto.setId(id);\n    communityDto.setName(name);\n    communityDto.setDistrict(district);\n    communityDto.setCommunityId(communityId);\n\n    // when\n    var community = communityMapper.communityDtoToCommunity(communityDto);\n\n    // then\n    assertEquals(community.getId(), id);\n    assertEquals(community.getName(), name);\n    assertEquals(community.getDistrict(), district);\n    assertEquals(community.getCommunityId(), communityId);\n  }\n}","location":{"start":27,"insert":27,"offset":" ","indent":0,"comment":null},"item_type":"class","length":50},{"id":"d8e952a5-bf68-6083-8d4c-2557b378547a","ancestors":["471ec84a-36b9-acb5-a14a-8db37568acd0"],"type":"function","description":"maps a `Community` object to a corresponding `CommunityDto` object, preserving its properties and providing additional ones for validation.","params":[],"usage":{"language":"java","code":"@Test\npublic void communityToCommunityDto() {\n    // given\n    var community = new Community();\n\n    community.setId(id);\n    community.setCommunityId(communityId);\n    community.setDistrict(district);\n    community.setName(name);\n\n    // when\n    var communityDto = communityMapper.communityToCommunityDto(community);\n\n    // then\n    assertEquals(communityDto.getId(), id);\n    assertEquals(communityDto.getName(), name);\n    assertEquals(communityDto.getDistrict(), district);\n    assertEquals(communityDto.getCommunityId(), communityId);\n}\n","description":""},"name":"communityToCommunityDto","code":"@Test\n  void communityToCommunityDto() {\n    // given\n    var community = new Community();\n\n    community.setId(id);\n    community.setCommunityId(communityId);\n    community.setDistrict(district);\n    community.setName(name);\n\n    // when\n    var communityDto = communityMapper.communityToCommunityDto(community);\n\n    // then\n    assertEquals(communityDto.getId(), id);\n    assertEquals(communityDto.getName(), name);\n    assertEquals(communityDto.getDistrict(), district);\n    assertEquals(communityDto.getCommunityId(), communityId);\n  }","location":{"start":38,"insert":38,"offset":" ","indent":2,"comment":null},"item_type":"method","length":19},{"id":"9ed400fa-424f-c18e-6647-c0f5114a74e8","ancestors":["471ec84a-36b9-acb5-a14a-8db37568acd0"],"type":"function","description":"converts a `CommunityDto` object into a `Community` object, using the `communityMapper`. It sets the `id`, `name`, `district`, and `communityId` properties of the resulting `Community` object to match the corresponding properties of the input `CommunityDto` object.","params":[],"usage":{"language":"java","code":"@Test\n  void communityDtoToCommunity() {\n    // given\n    var communityDto = new CommunityDto();\n    communityDto.setId(id);\n    communityDto.setName(name);\n    communityDto.setDistrict(district);\n    communityDto.setCommunityId(communityId);\n\n    // when\n    var community = communityMapper.communityDtoToCommunity(communityDto);\n\n    // then\n    assertEquals(community.getId(), id);\n    assertEquals(community.getName(), name);\n    assertEquals(community.getDistrict(), district);\n    assertEquals(community.getCommunityId(), communityId);\n  }\n","description":"\nThis example is a JUnit test that demonstrates the correct usage of the method `communityDtoToCommunity` from the class `CommunityMapper`. The test creates an instance of the `CommunityDto` class and sets its properties. Then it uses the `communityDtoToCommunity` method to convert the DTO into a `Community` object. Finally, the test asserts that the returned `Community` object has the same values for its properties as the original `CommunityDto`."},"name":"communityDtoToCommunity","code":"@Test\n  void communityDtoToCommunity() {\n    // given\n    var communityDto = new CommunityDto();\n    communityDto.setId(id);\n    communityDto.setName(name);\n    communityDto.setDistrict(district);\n    communityDto.setCommunityId(communityId);\n\n    // when\n    var community = communityMapper.communityDtoToCommunity(communityDto);\n\n    // then\n    assertEquals(community.getId(), id);\n    assertEquals(community.getName(), name);\n    assertEquals(community.getDistrict(), district);\n    assertEquals(community.getCommunityId(), communityId);\n  }","location":{"start":58,"insert":58,"offset":" ","indent":2,"comment":null},"item_type":"method","length":18}]}}}