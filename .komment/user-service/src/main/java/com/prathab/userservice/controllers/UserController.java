{"name":"UserController.java","path":"user-service/src/main/java/com/prathab/userservice/controllers/UserController.java","content":{"structured":{"description":"A REST controller that facilitates user actions. The controller includes a `getMapping` method that returns a string indicating the server is running and a `postMapping` method that creates a new user based on a request body and returns a response entity with the created user details.","diagram":"digraph G {\n    label=\"com.todo.FixMe\"\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    subgraph cluster_0 {\n        label=\"models\"\n        color=\"#33363A\"\n        node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"];\n        subgraph cluster_1 {\n            label=\"request\"\n            color=\"#33363A\"\n            node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"];\n            CreateUserRequest\n        }\n        subgraph cluster_2 {\n            label=\"response\"\n            color=\"#33363A\"\n            node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"];\n            CreateUserResponse\n        }\n    }\n    edge [color=\"#26de81\"]\n    UserController -> CreateUserResponse \n    CreateUserRequest -> UserController \n}\n","items":[{"id":"8bb0bde0-a709-bcba-984c-586020a0feda","ancestors":["5f871ad6-c3a4-248d-264f-6ad881ad9229"],"type":"function","description":"traces the port and token secret used to run it and returns the message \"Working\".","params":[],"returns":{"type_name":"String","description":"the string \"Working\".","complex_type":false},"usage":{"language":"java","code":"@GetMapping(\"/users/status\")\n  public String status() {\n    return \"Working\";\n  }\n","description":""},"name":"status","code":"@GetMapping(\"/users/status\")\n  public String status() {\n    log.trace(\"Running on port{} with jwt_secret{}\",\n        environment.getProperty(\"local.server.port\"),\n        environment.getProperty(\"token.secret\"));\n    return \"Working\";\n  }","location":{"start":51,"insert":51,"offset":" ","indent":2,"comment":null},"item_type":"method","length":7,"docLength":null},{"id":"7983ac5c-f635-76ab-b845-1f6867f0544c","ancestors":["5f871ad6-c3a4-248d-264f-6ad881ad9229"],"type":"function","description":"maps a `CreateUserRequest` object to a `UserDto` object, creates a new user using the `createUser()` method, and returns a `CreateUserResponse` object in a HTTP `CREATED` status.","params":[{"name":"request","type_name":"CreateUserRequest","description":"CreateUserRequest object that contains the user's information to be created, which is converted into a UserDto object by the userApiMapper and then used to create a new user in the system.\n\n* `@Valid`: Indicates that the input object should be validated against the schema defined in the Java classes or annotations.\n* `@RequestBody`: Represents the request body as a single entity, which is the case here since the function accepts a `CreateUserRequest` object as its only parameter.\n* `MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE`: Defines the media types that the function can handle for input and output. In this case, it can handle both JSON and XML formats for input and output.","complex_type":true}],"returns":{"type_name":"CreateUserResponse","description":"a `ResponseEntity` with a status of `HttpStatus.CREATED` and a body containing the created user response.\n\n* `ResponseEntity`: This is an instance of the `ResponseEntity` class, which represents a response to a HTTP request. It has several attributes, including the status code, body, and headers. In this case, the status code is `HttpStatus.CREATED`, indicating that the request was successful and the resource was created.\n* `body`: This attribute contains the response body, which in this case is an instance of the `CreateUserResponse` class. This class represents the result of the sign-up operation, including the user ID and other relevant information.\n* `HttpStatus`: This attribute represents the HTTP status code associated with the response. In this case, it is `HttpStatus.CREATED`, indicating that the request was successful and the resource was created.","complex_type":true},"usage":{"language":"java","code":"CreateUserRequest request = new CreateUserRequest();\nrequest.setEmail(\"test@example.com\");\nrequest.setPassword(\"password\");\nResponseEntity<CreateUserResponse> response = userController.signUp(request);\n","description":""},"name":"signUp","code":"@PostMapping(\n      path = \"/users\",\n      produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},\n      consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE}\n  )\n  public ResponseEntity<CreateUserResponse> signUp(@Valid @RequestBody CreateUserRequest request) {\n    log.trace(\"Received SignUp request\");\n    var requestUserDto = userApiMapper.createUserRequestToUserDto(request);\n    var createdUserDto = userService.createUser(requestUserDto);\n    var createdUserResponse = userApiMapper.userDtoToCreateUserResponse(createdUserDto);\n    return ResponseEntity.status(HttpStatus.CREATED).body(createdUserResponse);\n  }","location":{"start":59,"insert":59,"offset":" ","indent":2,"comment":null},"item_type":"method","length":12,"docLength":null}]}}}