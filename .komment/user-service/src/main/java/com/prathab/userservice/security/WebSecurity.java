{"name":"WebSecurity.java","path":"user-service/src/main/java/com/prathab/userservice/security/WebSecurity.java","content":{"structured":{"description":"A custom WebSecurityConfigurerAdapter for securing a web application. It disables CSRF attacks, authorizes requests based on the gateway IP address, and sets the custom login URL. The configure() methods configure the HTTP security, authentication manager builder, and add an authentication filter to handle requests.","image":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.prathab.userservice.security.AppUserDetailsService Pages: 1 -->\n<svg width=\"189pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 189.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.prathab.userservice.security.AppUserDetailsService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"181,-30 0,-30 0,0 181,0 181,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.prathab.userservice.security.</text>\n<text text-anchor=\"middle\" x=\"90.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AppUserDetailsService</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"145.5,-85 35.5,-85 35.5,-66 145.5,-66 145.5,-85\"/>\n<text text-anchor=\"middle\" x=\"90.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">UserDetailsService</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M90.5,-55.65C90.5,-47.36 90.5,-37.78 90.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"87,-55.87 90.5,-65.87 94,-55.87 87,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n","diagram":"digraph G {\n    label=\"com.todo.FixMe\"\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    WebSecurity -> AuthenticationFilter \n}\n","items":[{"id":"a5ac9749-262f-ceac-9d4c-bdd59fb2d788","ancestors":["9cf76031-12f3-22a5-0c41-89e8514fe78c"],"type":"function","description":"disables CSRF protection and authorizes requests based on the value of `environment.getProperty(\"gateway.ip\")`. It also disables frame options.","params":[{"name":"http","type_name":"HttpSecurity","description":"HttpSecurity instance that is being configured.\n\n1. `csrf().disable()`: Disables Cross-Site Request Forgery (CSRF) protection for this configuration.\n2. `authorizeRequests().antMatchers(\"/**\")`: Enumerates all requests to any path in the application, including subpaths, and authorizes them based on the value of the `environment.getProperty(\"gateway.ip\")` property.\n3. `hasIpAddress(environment.getProperty(\"gateway.ip\"))`: Filters incoming requests based on the IP address specified in the `environment.getProperty(\"gateway.ip\")` property.\n4. `and()`: Used to chain multiple authorizations together.\n5. `addFilter(getAuthenticationFilter())`: Adds an authentication filter to the configuration. The filter can be accessed through the `getAuthenticationFilter()` method.","complex_type":true}],"usage":{"language":"java","code":"@Override protected void configure(HttpSecurity http) throws Exception {\n    http.csrf().disable();\n    http\n        .authorizeRequests()\n        .antMatchers(\"/**\")\n        .hasIpAddress(environment.getProperty(\"gateway.ip\"))\n        .and()\n        .addFilter(getAuthenticationFilter());\n    http.headers().frameOptions().disable();\n}\n","description":"\nIn this example, the method is overridden and used to configure the security of the HttpSecurity object. This is done by disabling the CSRF protection using the csrf() method, then allowing all requests using the authorizeRequests() method and specifying an IP address using the hasIpAddress() method. The addFilter() method is then called to add a custom filter. Finally, the frameOptions() method is disabled using the disable() method.\nThe environment property is obtained from the Environment class and used to obtain the value of the gateway.ip property. The objectMapper, appUserDetailsService, and passwordEncoder objects are also passed as parameters for use in the AuthenticationFilter."},"name":"configure","code":"@Override protected void configure(HttpSecurity http) throws Exception {\n    http.csrf().disable();\n    http\n        .authorizeRequests()\n        .antMatchers(\"/**\")\n        .hasIpAddress(environment.getProperty(\"gateway.ip\"))\n        .and()\n        .addFilter(getAuthenticationFilter());\n    http.headers().frameOptions().disable();\n  }","location":{"start":50,"insert":50,"offset":" ","indent":2,"comment":null},"item_type":"method","length":10,"docLength":null},{"id":"4ba60edd-c913-aea4-d342-7a127043e806","ancestors":["9cf76031-12f3-22a5-0c41-89e8514fe78c"],"type":"function","description":"creates an instance of `AuthenticationFilter`, configures it with various parameters, and returns the filter object.","params":[],"returns":{"type_name":"AuthenticationFilter","description":"an instance of `AuthenticationFilter`, which is a custom filter for authentication purposes.\n\n* `var authFilter`: This is an instance of the `AuthenticationFilter` class.\n* `objectMapper`: A reference to an `ObjectMapper` object, which is used to convert Java objects into and out of JSON format.\n* `appUserDetailsService`: A reference to an `AppUserDetailsService` object, which provides user details for authentication purposes.\n* `environment`: A reference to an `Environment` object, which contains configuration properties for the application.\n* `authenticationManager(): A reference to an `AuthenticationManager` object, which manages the authentication process for the application.\n* `setFilterProcessesUrl(String url)`: This method sets the `url` property of the `filterProcesses` attribute of the `AuthenticationFilter` instance.","complex_type":true},"usage":{"language":"java","code":"private AuthenticationFilter getAuthenticationFilter() throws Exception {\n    var authFilter = new AuthenticationFilter(objectMapper, appUserDetailsService, environment,\n        authenticationManager());\n    authFilter.setFilterProcessesUrl(environment.getProperty(\"login.url.path\"));\n    return authFilter;\n}\n","description":"\nIn this example, the getAuthenticationFilter method is called and returns an AuthenticationFilter object, which is then set to filter the requests at a specific URL path using the setFilterProcessesUrl method. This ensures that only requests from a specific IP address are allowed to access the application."},"name":"getAuthenticationFilter","code":"private AuthenticationFilter getAuthenticationFilter() throws Exception {\n    var authFilter = new AuthenticationFilter(objectMapper, appUserDetailsService, environment,\n        authenticationManager());\n    authFilter.setFilterProcessesUrl(environment.getProperty(\"login.url.path\"));\n    return authFilter;\n  }","location":{"start":61,"insert":61,"offset":" ","indent":2,"comment":null},"item_type":"method","length":6,"docLength":null},{"id":"92aabdac-051f-d9a5-8249-02cc7dacd8fd","ancestors":["9cf76031-12f3-22a5-0c41-89e8514fe78c"],"type":"function","description":"specifies the user details service and password encoder for an authentication manager builder, enabling customized authentication settings.","params":[{"name":"auth","type_name":"AuthenticationManagerBuilder","description":"AuthenticationManagerBuilder instance, which is used to configure the builder with various authentication-related settings.\n\n* `userDetailsService`: It represents a service that manages user details for authentication purposes.\n* `passwordEncoder`: It encodes passwords for secure storage and retrieval during authentication.","complex_type":true}],"usage":{"language":"java","code":"@Override\nprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\n    auth.userDetailsService(appUserDetailsService).passwordEncoder(passwordEncoder);\n}\n","description":"\nIn this example, the method `configure` is overridden from a parent class and passed an argument of type `AuthenticationManagerBuilder`. The method then uses this argument to set up the user details service and password encoder for authentication."},"name":"configure","code":"@Override protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n    auth.userDetailsService(appUserDetailsService).passwordEncoder(passwordEncoder);\n  }","location":{"start":68,"insert":68,"offset":" ","indent":2,"comment":null},"item_type":"method","length":3,"docLength":null}]}}}