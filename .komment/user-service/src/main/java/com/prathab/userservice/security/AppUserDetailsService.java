{"name":"AppUserDetailsService.java","path":"user-service/src/main/java/com/prathab/userservice/security/AppUserDetailsService.java","content":{"structured":{"description":"An `AppUserDetailsService` that implements the `UserDetailsService` interface in Spring Security. The service loads user details by username using a repository and mapper, and returns a `UserDetails` object with email, encrypted password, and other attributes. The `getUserDetailsByUsername()` method returns a `UserDto` object containing the same information as the `UserDetails` object.","items":[{"id":"ca5527c3-93cb-8c9e-8d4d-706005585fa8","ancestors":[],"type":"function","description":"is a custom implementation of Spring Security's `UserDetailsService`, providing user details retrieval and manipulation functionality through its methods `loadUserByUsername` and `getUserDetailsByUsername`.","name":"AppUserDetailsService","code":"@Service\npublic class AppUserDetailsService implements UserDetailsService {\n  private final UserRepository userRepository;\n  private final UserMapper userMapper;\n\n  public AppUserDetailsService(UserRepository userRepository,\n      UserMapper userMapper) {\n    this.userRepository = userRepository;\n    this.userMapper = userMapper;\n  }\n\n  @Override public UserDetails loadUserByUsername(String username)\n      throws UsernameNotFoundException {\n\n    var user = userRepository.findByEmail(username);\n    if (user == null) {\n      throw new UsernameNotFoundException(username);\n    }\n\n    return new User(user.getEmail(),\n        user.getEncryptedPassword(),\n        true,\n        true,\n        true,\n        true,\n        Collections.emptyList());\n  }\n\n  public UserDto getUserDetailsByUsername(String username) {\n    var user = userRepository.findByEmail(username);\n    if (user == null) {\n      throw new UsernameNotFoundException(username);\n    }\n    return userMapper.userToUserDto(user);\n  }\n}","location":{"start":32,"insert":32,"offset":" ","indent":0,"comment":{"start":28,"end":31}},"item_type":"class","length":36},{"id":"38fd93f7-8fb3-41a0-bb46-f21580982980","ancestors":["ca5527c3-93cb-8c9e-8d4d-706005585fa8"],"type":"function","description":"loads a user from the database based on their username and returns a `UserDetails` object containing the user's email, encrypted password, and other attributes.","params":[{"name":"username","type_name":"String","description":"username for which the user details are being loaded.","complex_type":false}],"returns":{"type_name":"User","description":"a `UserDetails` object containing the user's email, encrypted password, and other metadata.\n\n* `email`: The email address of the user.\n* `encryptedPassword`: The encrypted password for the user.\n* `isAdmin`: A boolean indicating whether the user is an administrator or not.\n* `isEditor`: A boolean indicating whether the user is an editor or not.\n* `isManager`: A boolean indicating whether the user is a manager or not.\n* `isModerator`: A boolean indicating whether the user is a moderator or not.\n* `roles`: An empty list, as the function does not return any role information.","complex_type":true},"usage":{"language":"java","code":"@Autowired private AppUserDetailsService userDetailService; \n\npublic void authenticateUser() {\n    String username = \"testuser\";\n    UserDetails userDetails = userDetailService.loadUserByUsername(username);\n}\n","description":""},"name":"loadUserByUsername","code":"@Override public UserDetails loadUserByUsername(String username)\n      throws UsernameNotFoundException {\n\n    var user = userRepository.findByEmail(username);\n    if (user == null) {\n      throw new UsernameNotFoundException(username);\n    }\n\n    return new User(user.getEmail(),\n        user.getEncryptedPassword(),\n        true,\n        true,\n        true,\n        true,\n        Collections.emptyList());\n  }","location":{"start":43,"insert":43,"offset":" ","indent":2,"comment":null},"item_type":"method","length":16},{"id":"07e60901-e80a-08a5-d245-47535898fae2","ancestors":["ca5527c3-93cb-8c9e-8d4d-706005585fa8"],"type":"function","description":"retrieves a user's details from the repository and maps them to a `UserDto` object using the provided username.","params":[{"name":"username","type_name":"String","description":"username for which the user details are to be retrieved.","complex_type":false}],"returns":{"type_name":"UserDto","description":"a `UserDto` object containing the details of the user with the provided username.\n\n* `user`: A `User` object representing the user with the specified `username`.\n* `userMapper`: A mapping function used to convert the `User` object to a `UserDto` object.\n\nThe function returns a `UserDto` object, which contains the details of the user, such as their email, name, and other relevant information.","complex_type":true},"usage":{"language":"java","code":"public class UserDetailsServiceExample {\n    public static void main(String[] args) {\n        // Initialize the userRepository and userMapper\n        var userRepository = new UserRepository();\n        var userMapper = new UserMapper();\n\n        // Set up a user with an email and password\n        var user = new User(\"test@example.com\", \"password\");\n\n        // Add the user to the userRepository\n        userRepository.save(user);\n\n        // Create an instance of AppUserDetailsService\n        var appUserDetailsService = new AppUserDetailsService(userRepository, userMapper);\n\n        // Get the UserDto for the given username\n        var userDto = appUserDetailsService.getUserDetailsByUsername(\"test@example.com\");\n\n        // Print the userDto to the console\n        System.out.println(userDto);\n    }\n}\n","description":""},"name":"getUserDetailsByUsername","code":"public UserDto getUserDetailsByUsername(String username) {\n    var user = userRepository.findByEmail(username);\n    if (user == null) {\n      throw new UsernameNotFoundException(username);\n    }\n    return userMapper.userToUserDto(user);\n  }","location":{"start":60,"insert":60,"offset":" ","indent":2,"comment":null},"item_type":"method","length":7}]}}}